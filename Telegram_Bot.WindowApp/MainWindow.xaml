<Window x:Class="Telegram_Bot.WindowApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Telegram_Bot.WindowApp"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        WindowStartupLocation="CenterScreen"
        MinWidth="500"
        MinHeight="450"
        WindowState="Normal"
        WindowStyle="None"
        AllowsTransparency="False"
        BorderThickness="0"        
        ResizeMode="CanResizeWithGrip"
        Background="Black">
    <Window.Resources>
        <Style x:Key="BlockGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Width" Value="380"/>
            <Setter Property="Margin" Value="15"/>
        </Style>
        <Style x:Key="BlockRectangleStyle" TargetType="{x:Type Rectangle}">
            <Setter Property="Fill" Value="#585858"/>
            <Setter Property="RadiusX" Value="7"/>
            <Setter Property="RadiusY" Value="7"/>
        </Style>
        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Bahnschrift"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>

        <Style x:Key="ButtonTriggerStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryAccentBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBlockColorWhite}"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Style.BasedOn>
                <Style TargetType="{x:Type ButtonBase}">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                    <Setter Property="materialDesign:RippleAssist.Feedback" Value="White"/>
                    <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource SecondaryAccentBrush}"/>
                    <Setter Property="materialDesign:ButtonProgressAssist.IndicatorBackground" Value="{DynamicResource MaterialDesignDivider}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth2"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Width" Value="40"/>
                    <Setter Property="Height" Value="40"/>
                    <Setter Property="materialDesign:ButtonProgressAssist.Opacity" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Grid>
                                    <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                        <Ellipse x:Name="border" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}">
                                            <Ellipse.Effect>
                                                <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <materialDesign:ShadowConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </Ellipse.Effect>
                                        </Ellipse>
                                    </AdornerDecorator>
                                    <ProgressBar x:Name="ProgressBar" Background="{Binding (materialDesign:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding (materialDesign:ButtonProgressAssist.IndicatorForeground), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch" IsIndeterminate="{Binding (materialDesign:ButtonProgressAssist.IsIndeterminate), RelativeSource={RelativeSource TemplatedParent}}" Maximum="{Binding (materialDesign:ButtonProgressAssist.Maximum), RelativeSource={RelativeSource TemplatedParent}}" Margin="-8" Minimum="{Binding (materialDesign:ButtonProgressAssist.Minimum), RelativeSource={RelativeSource TemplatedParent}}" Opacity="{Binding (materialDesign:ButtonProgressAssist.Opacity), RelativeSource={RelativeSource TemplatedParent}}" RenderTransformOrigin="0.5,0.5" Style="{DynamicResource MaterialDesignCircularProgressBar}" Value="{Binding (materialDesign:ButtonProgressAssist.Value), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Stretch">
                                        <ProgressBar.Height>
                                            <TemplateBinding Property="Height">
                                                <TemplateBinding.ConverterParameter>
                                                    <System:Int32>8</System:Int32>
                                                </TemplateBinding.ConverterParameter>
                                                <TemplateBinding.Converter>
                                                    <materialDesign:MathConverter Operation="Add"/>
                                                </TemplateBinding.Converter>
                                            </TemplateBinding>
                                        </ProgressBar.Height>
                                        <ProgressBar.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="0" ScaleX="0"/>
                                            </TransformGroup>
                                        </ProgressBar.RenderTransform>
                                        <ProgressBar.Visibility>
                                            <Binding Path="(materialDesign:ButtonProgressAssist.IsIndicatorVisible)" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </ProgressBar.Visibility>
                                        <ProgressBar.Width>
                                            <TemplateBinding Property="Width">
                                                <TemplateBinding.ConverterParameter>
                                                    <System:Int32>8</System:Int32>
                                                </TemplateBinding.ConverterParameter>
                                                <TemplateBinding.Converter>
                                                    <materialDesign:MathConverter Operation="Add"/>
                                                </TemplateBinding.Converter>
                                            </TemplateBinding>
                                        </ProgressBar.Width>
                                    </ProgressBar>
                                    <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                    <materialDesign:Ripple ClipToBounds="True" Clip="{Binding RenderedGeometry, ElementName=GeometryEllipse}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Ellipse x:Name="GeometryEllipse" Focusable="False" Fill="Transparent" IsHitTestVisible="False"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsDefaulted" Value="True">
                                        <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.23"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                        <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                                    </Trigger>
                                    <Trigger Property="materialDesign:ButtonProgressAssist.IsIndicatorVisible" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" From="0.9" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ProgressBar"/>
                                                    <DoubleAnimation Duration="0:0:0.2" From="0.9" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ProgressBar"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" From="1" To="0.9" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ProgressBar"/>
                                                    <DoubleAnimation Duration="0:0:0.2" From="1" To="0.9" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ProgressBar"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="UIElement.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard  Storyboard.TargetProperty="Foreground.Color" >
                                    <ColorAnimation To="Chartreuse" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard  Storyboard.TargetProperty="Foreground.Color" >
                                    <ColorAnimation To="White" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Style.Triggers>
                </Style>
            </Style.BasedOn>
        </Style>


        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="ScrollBarRectangle" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="ScrollBarRectangle" Property="Width" Value="Auto" />
                                <Setter TargetName="ScrollBarRectangle" Property="Height" Value="5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Margin" Value="0,0,-5,-5" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="{DynamicResource ForegroundColorUIElements}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="5" Background="{TemplateBinding Background}">
                            <Track x:Name="PART_Track" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="ScrollBarThumb" Background="{TemplateBinding Foreground}" Style="{StaticResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="ScrollBarThumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="5" />
                                <Setter TargetName="ScrollBarThumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="{DynamicResource MainBackgroundColor}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="ThrowInfoGrid" Grid.RowSpan="3" Width="300" Height="Auto" VerticalAlignment="Top" Margin="-50" Style="{DynamicResource BlockGridStyle}" Opacity="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Rectangle Grid.ColumnSpan="2" Fill="{DynamicResource MainBackgroundColor}" Style="{DynamicResource BlockRectangleStyle}"></Rectangle>
            <materialDesign:PackIcon x:Name="KindThrowMessage" Kind="Check" VerticalAlignment="Center" HorizontalAlignment="Center" Height="40" Width="40" Foreground="{DynamicResource ForegroundColorUIElements}"/>
            <TextBlock x:Name="TextBlockMessageThrow" Grid.Column="1" Style="{DynamicResource TextBlockStyle}" Text="Throw Message Exception Or Seccessful Operation Check" FontSize="15" TextWrapping="Wrap" Margin="7" TextAlignment="Center"/>
        </Grid>
        <Grid Grid.Row="1" Grid.RowSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="GridMainPage" Grid.Column="1">
                <Grid Background="{DynamicResource MainGrayColor}">
                    <Grid.Effect>
                        <DropShadowEffect ShadowDepth="0"
                                      Color="Black"
                                      BlurRadius="15"/>
                    </Grid.Effect>
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" VirtualizingPanel.ScrollUnit="Pixel">
                        <Frame x:Name="MainWindowPage" NavigationUIVisibility="Hidden" Margin="10" Grid.ColumnSpan="2"/>
                    </ScrollViewer>
                </Grid>
            </Grid>
            <Grid x:Name="GridMenu" Width="250" HorizontalAlignment="Left" Grid.Column="0">

                <Grid.Effect>
                    <DropShadowEffect ShadowDepth="0" Color="Black" BlurRadius="15"/>
                </Grid.Effect>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Gray" Offset="0"/>
                            <GradientStop Color="#585858" Offset="0.01"/>
                            <GradientStop Color="#1C1C1C" Offset="1"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <StackPanel>
                        <TextBlock Margin="0 10 0 0" FontSize="20" FontWeight="Bold" Text="Боты" Style="{DynamicResource TextBlockStyle}"/>
                        <Border Grid.Row="0"
                       VerticalAlignment="Bottom"
                       Height="2"
                            Margin="20 10 20 0"
                       Background="{DynamicResource TextBlockColorWhite}"
                       Opacity="0.5"/>
                        <StackPanel Orientation="Horizontal" Margin="10" HorizontalAlignment="Center">
                            <TextBlock Text="Telegram" Style="{DynamicResource TextBlockStyle}"/>
                            <Ellipse x:Name="TelegramBotStatus" 
                                     Margin="5 0" 
                                     Width="5" 
                                     Height="5"
                                     Fill="DarkRed"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="87 0">
                            <TextBlock Text="VK" Style="{DynamicResource TextBlockStyle}"/>
                            <Ellipse x:Name="VKBotStatus" 
                                     Margin="5 0" 
                                     Width="5" 
                                     Height="5"
                                     Fill="DarkRed"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="87 10">
                            <TextBlock Text="Viber" Style="{DynamicResource TextBlockStyle}"/>
                            <Ellipse x:Name="ViberBotStatus" 
                                     Margin="5 0" 
                                     Width="5" 
                                     Height="5"
                                     Fill="DarkRed"/>
                        </StackPanel>
                        <Border Grid.Row="0"
                       VerticalAlignment="Bottom"
                       Height="2"
                            Margin="20 0 20 0"
                       Background="{DynamicResource TextBlockColorWhite}"
                       Opacity="0.5"/>
                    </StackPanel>
                    <ListBox x:Name="GroupListBox" Grid.Row="1" SelectionChanged="GroupListBox_SelectionChanged">
                        <ListBoxItem x:Name="HomeBox" Style="{DynamicResource ListBoxItemStyle}">
                            <StackPanel Orientation="Horizontal" Margin="10 0">
                                <materialDesign:PackIcon x:Name="HomeButton" Kind="HomeOutline" Height="25" Width="25" Foreground="{DynamicResource ForegroundColorUIElements}"/>
                                <TextBlock Text="Управление ботами" Margin="20 0" Style="{DynamicResource TextBlockStyle}"/>
                            </StackPanel>
                        </ListBoxItem>
                        <ListBoxItem x:Name="Box" Style="{DynamicResource ListBoxItemStyle}">
                            <StackPanel Orientation="Horizontal"  Margin="10 0">
                                <materialDesign:PackIcon x:Name="AccountButton" Kind="AccountOutline" Height="25" Width="25" Foreground="{DynamicResource ForegroundColorUIElements}"/>
                                <TextBlock Text="Логи" Margin="20 0" Style="{DynamicResource TextBlockStyle}"/>
                            </StackPanel>
                        </ListBoxItem>
                        <ListBoxItem x:Name="Settings" Style="{DynamicResource ListBoxItemStyle}">
                            <StackPanel Orientation="Horizontal"  Margin="10 0">
                                <materialDesign:PackIcon x:Name="SettingsButton" Kind="TrackChanges" Height="25" Width="25" Foreground="{DynamicResource ForegroundColorUIElements}"/>
                                <TextBlock Text="Пользователи" Margin="20 0" Style="{DynamicResource TextBlockStyle}"/>
                            </StackPanel>
                        </ListBoxItem>
                    </ListBox>
                </Grid>
            </Grid>
        </Grid>
        <Grid x:Name="GridTitleBar" Background="{DynamicResource TitleStackPanelBackgroundColor}" MouseDown="GridTitleBar_MouseDown" MouseLeftButtonUp="GridTitleBar_MouseLeftButtonDown" MouseLeftButtonDown="GridTitleBar_MouseLeftButtonDown_1">
            <Grid.Effect>
                <DropShadowEffect ShadowDepth="0" Color="Black" BlurRadius="15"/>
            </Grid.Effect>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="6 2 2 2">
                <Image Source="Resource/botRoma.png">
                    <Image.Effect>
                        <DropShadowEffect ShadowDepth="0" Color="Black" BlurRadius="15"/>
                    </Image.Effect>
                </Image>
            </StackPanel>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                <TextBlock Text="Панель управления ботами" Foreground="{DynamicResource TextBlockColorWhite}" FontSize="17" FontFamily="Bahnschrift">
                    <TextBlock.Effect>
                        <DropShadowEffect ShadowDepth="0" Color="Black" BlurRadius="15"/>
                    </TextBlock.Effect>
                </TextBlock>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="10,0">
                <Button x:Name="WindowMinimized" Width="25" Height="25" Background="{x:Null}" BorderBrush="{x:Null}" Style="{DynamicResource ButtonTriggerStyle}" Click="WindowMinimized_Click" >
                    <materialDesign:PackIcon Kind="WindowMinimize"/>
                </Button>
                <Button  Style="{DynamicResource ButtonTriggerStyle}" Width="25" Height="25" Background="{x:Null}" BorderBrush="{x:Null}" Click="WindowMaxNormal_Click">
                    <materialDesign:PackIcon x:Name="WindowMaxNormal" Kind="WindowRestore"/>
                </Button>
                <Button x:Name="ButtonFechar" Style="{DynamicResource ButtonTriggerStyle}" Width="25" Height="25" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonFechar_Click" >
                    <materialDesign:PackIcon Kind="Power" Background="Transparent"/>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
