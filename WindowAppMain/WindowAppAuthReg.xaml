<Window x:Class="WindowAppMain.WindowAppAuthReg"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WindowAppMain"
        xmlns:uc="clr-namespace:WindowAppMain.Model.Controls"
        mc:Ignorable="d"
        Title="WindowAuth" Height="388"  Width="300" Background="#151515" WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" Style="{DynamicResource WindowWithCornerBorder}">
    <Window.Resources>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#7C819A"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#7C819A"/>
        <Style x:Key="TextBoxCornerRadius" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="7"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="Control.IsFocused" Value="true">
                                <Setter TargetName="border" Property="BorderThickness" Value="0"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="OnOffToggleStyle" TargetType="ToggleButton">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content">
                        <Setter.Value>
                            <TextBlock Text="Yes"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content">
                        <Setter.Value>
                            <TextBlock Text="No"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="BorderButtonCorner" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Chartreuse"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="7" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Chartreuse"/>
                                <Setter Property="Background" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PasswordBoxCorner" TargetType="{x:Type PasswordBox}">
            <Setter Property="PasswordChar" Value="●"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="border" CornerRadius="7" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>

                            <Trigger Property="Control.IsFocused" Value="true">
                                <Setter TargetName="border" Property="BorderThickness" Value="0"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Grid x:Name="Grid1">
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="30"/>
        </Grid.ColumnDefinitions>
        <Grid.Effect>
            <DropShadowEffect Direction="-90" RenderingBias="Quality" ShadowDepth="2"/>
        </Grid.Effect>


        <Button x:Name="ButtonAuth" Style="{DynamicResource MyButtonStyle}" Grid.Row="0" Grid.Column="1" Content="Авторизaция" HorizontalAlignment="Left" Margin="19, 15" VerticalAlignment="Center" Foreground="White" FontFamily="Bahnschrift" FontSize="15" Click="ButtonAuth_Click" Cursor="Hand"></Button>
        <Line x:Name="LineAuth" Grid.Row="0" Grid.Column="1" Stroke="Chartreuse" StrokeThickness="2" X1="18" Y1="50" X2="108" Y2="50"></Line>
        <Button x:Name="ButtonReg" Style="{DynamicResource MyButtonStyle}" Grid.Row="0" Grid.Column="1"  Content="Регистрация" HorizontalAlignment="Right" Margin="20, 15" VerticalAlignment="Center" Foreground="White" FontFamily="Bahnschrift" FontSize="15" Opacity="0.5" Click="ButtonReg_Click" Cursor="Hand"></Button>
        <Line x:Name="LineReg" Grid.Row="0" Grid.Column="1" Stroke="Chartreuse" StrokeThickness="2" X1="132" Y1="50" X2="220" Y2="50" Visibility="Hidden"></Line>
        <!-- Form Auth !-->
        <StackPanel x:Name="PanelAuth"  Grid.Row="1" Grid.Column="1" Visibility="Visible" Opacity="1">
            <Label Grid.Row="1" Grid.Column="1"  Margin="10,15" Content="Логин" VerticalAlignment="Top" FontFamily="Bahnschrift" Foreground="White" FontSize="15"/>
            <TextBox x:Name="TextBoxLoginAuthPanel" Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom" Margin="15, -10"  Height="25" Style="{DynamicResource TextBoxCornerRadius}" FontFamily="Bahnschrift" FontSize="15" Cursor="IBeam" MouseLeftButtonDown="PasswordBoxAuthPanel_MouseLeftButtonDown" PreviewKeyDown="TextBoxLoginAuthPanel_PreviewKeyDown"></TextBox>
            <Label Grid.Row="1" Grid.Column="1"  Margin="10, 15" Content="Пароль" VerticalAlignment="Top" FontFamily="Bahnschrift" Foreground="White" FontSize="15"/>
            <PasswordBox x:Name="PasswordBoxAuthPanel" Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom" Margin="15, -10" Height="25" FontFamily="Bahnschrift" FontSize="15" Style="{DynamicResource PasswordBoxCorner}"  Cursor="IBeam" MouseLeftButtonDown="PasswordBoxAuthPanel_MouseLeftButtonDown" PreviewKeyDown="PasswordBoxAuthPanel_PreviewKeyDown"/>
            <local:ToggleButton x:Name="ToggleButtonYesNo" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Height="28" Margin="15,30" VerticalAlignment="Center" Width="auto" Cursor="Hand"/>
            <Label Grid.Row="1" Grid.Column="1" Content="остаться в системе" FontFamily="Bahnschrift" FontSize="15" VerticalAlignment="Top" Margin="70, -58, 20, 15"  Foreground="WhiteSmoke"/>
            <Button x:Name="ButtonGoAuthPanel" Grid.Row="1" Grid.Column="1" VerticalAlignment="Top" Width="auto" Margin="15, -5" Style="{DynamicResource BorderButtonCorner}" FontFamily="Bahnschrift" FontSize="18" Cursor="Hand" Click="Button_Click">Войти</Button>
            <Line Grid.Row="1" Grid.Column="1"  Stroke="White" StrokeThickness="0.5" X1="15" Y1="35" X2="225" Y2="35"></Line>
            <Button x:Name="ButtonforgetPasswordAuthPanel" Style="{DynamicResource MyButtonStyle}" Grid.Row="1" Grid.Column="1" Foreground="WhiteSmoke" FontFamily="Bahnschrift" FontSize="12" Opacity="0.7" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="20"  Content="Забыли пароль?" Cursor="Hand"/>
        </StackPanel>
        <!-- Form Auth !-->


        <!-- Form Reg !-->
        <StackPanel x:Name="PanelReg" Grid.Row="1" Grid.Column="1" Visibility="Hidden" Opacity="0">
            <Label Grid.Row="1" Grid.Column="1" Margin="10,15" Content="Имя" VerticalAlignment="Top" FontFamily="Bahnschrift" Foreground="White" FontSize="15"/>
            <TextBox x:Name="TextBoxNameRegPanel" Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom" Margin="15, -10" Height="25" Style="{DynamicResource TextBoxCornerRadius}" FontFamily="Bahnschrift" FontSize="15" Cursor="IBeam"></TextBox>
            <Label Grid.Row="1" Grid.Column="1" Margin="10,15" Content="E-mail" VerticalAlignment="Top" FontFamily="Bahnschrift" Foreground="White" FontSize="15"/>
            <TextBox x:Name="TextBoxEmailRegPanel" Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom" Margin="15, -10" Height="25" Style="{DynamicResource TextBoxCornerRadius}" FontFamily="Bahnschrift" FontSize="15" Cursor="IBeam"></TextBox>
            <Label Grid.Row="1" Grid.Column="1"  Margin="10, 15" Content="Пароль" VerticalAlignment="Top" FontFamily="Bahnschrift" Foreground="White" FontSize="15"/>
            <PasswordBox x:Name="PasswordBoxRegPanelOrigin" Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom" Margin="15, -10" Height="25" Password="" FontFamily="Bahnschrift" FontSize="15" Style="{DynamicResource PasswordBoxCorner}" Cursor="IBeam" ToolTip="Длинна пароля должна содержать не менее 8 символов, пароль должен состоять из букв латинского алфавита, арабских цифр, 1 заглавной и 1 строчной буквы!" PasswordChanged="PasswordBoxRegPanel_PasswordChanged"></PasswordBox>
            <Label x:Name="ErrorValidPassword" Content="Пароль не соответствует правилам!" Foreground="DarkRed" FontFamily="Bahnschrift" FontSize="12" Margin="15,5" Height="25" Visibility="Hidden"/>
            <Label Grid.Row="1" Grid.Column="1" Margin="10, -15" Content="Подтвердите пароль" VerticalAlignment="Top" FontFamily="Bahnschrift" Foreground="White" FontSize="15"/>
            <PasswordBox x:Name="PasswordBoxRegPanelCopy" Grid.Row="1" Grid.Column="1"  Margin="15, 10" VerticalAlignment="Bottom" Password="" FontFamily="Bahnschrift" FontSize="15" Style="{DynamicResource PasswordBoxCorner}" Cursor="IBeam" Height="25" PasswordChanged="PasswordBoxRegPanel_PasswordChanged"/>
            <Label x:Name="ErrorPasswordNotEqual" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Пароли не совпадают!" Foreground="DarkRed" FontFamily="Bahnschrift" FontSize="12" Visibility="Hidden" Margin="15,-20" Width="210"/>
            <Button x:Name="ButtonRegPanel" Grid.Row="1" Grid.Column="1" Height="30" VerticalAlignment="Top" Width="auto" Margin="15, 15" Style="{DynamicResource BorderButtonCorner}" FontFamily="Bahnschrift" FontSize="18" Cursor="Hand" Click="ButtonRegPanel_Click">Зарегистрироваться</Button>
        </StackPanel>
        <!-- Form Reg !-->

        <Canvas x:Name="PanelAnimate" Grid.ColumnSpan="3" Grid.RowSpan="2" Visibility="Hidden">
            <Rectangle x:Name="FillRectangle" Fill="Gray" Margin="0" Grid.ColumnSpan="1" Grid.RowSpan="2" Visibility="Visible" Opacity="0.8" Height="388" Width="300"/>
            <Rectangle x:Name="RecktangelPanel" Fill="#151515" Height="150" Width="250" RadiusX="15" RadiusY="15" VerticalAlignment="Center" HorizontalAlignment="Center" Canvas.Left="26" Canvas.Top="105">
                <Rectangle.Effect>
                    <DropShadowEffect
      ShadowDepth="4"
      Direction="330"
      Color="Black"
      Opacity="0.5"
     BlurRadius="4"/>
                </Rectangle.Effect></Rectangle>
            <Button x:Name="ButtonClose" Grid.Row="1" Grid.Column="1" VerticalAlignment="Top" Width="207" Style="{DynamicResource BorderButtonCorner}" FontFamily="Bahnschrift" FontSize="18" Cursor="Hand" Click="ButtonClose_Click" Visibility="Hidden" Canvas.Left="46" Canvas.Top="224">Закрыть</Button>
            <uc:LoadingAnimation x:Name="Ellepses" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" Visibility="Visible" Height="103" Canvas.Left="46" Canvas.Top="130" Width="207"/>
        </Canvas>
    </Grid>
</Window>
