<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        xmlns:local="clr-namespace:WindowAppMain"
        xmlns:System="clr-namespace:System;assembly=mscorlib" x:Class="WindowAppMain.MainWindow"
        xmlns:loaders="clr-namespace:Loaders;assembly=MrMitch.Loaders"
        mc:Ignorable="d"
        Icon="Resource/botRoma.png"
        WindowStartupLocation="CenterScreen"
        MinWidth="500"
        MinHeight="450"
        WindowState="Normal"
        WindowStyle="None"
        AllowsTransparency="False"
        BorderThickness="0"        
        ResizeMode="CanResizeWithGrip"
        x:Name="MainWindowName"
    Background="Black">
    <Window.Resources>
        <Storyboard x:Key="OpenMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="43.5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="rectangle1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-43.5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle2">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="250"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="StackPanelButtonMenu">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="150"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="UserPageInfo">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="UserPageInfo">
                <EasingDoubleKeyFrame KeyTime="0" Value="20"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="230"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="UserPageInfo">
                <EasingDoubleKeyFrame KeyTime="0" Value="30"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="130"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="ImageLogo">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="50"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ImageLogo">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="50"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0" Value="43.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="rectangle1">
                <EasingDoubleKeyFrame KeyTime="0" Value="-43.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle2">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="40"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="StackPanelButtonMenu">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="50"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="UserPageInfo">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="UserPageInfo">
                <EasingDoubleKeyFrame KeyTime="0" Value="230"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="20"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="UserPageInfo">
                <EasingDoubleKeyFrame KeyTime="0" Value="130"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="10"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="ImageLogo">
                <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ImageLogo">
                <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="ShowMessageThrowGrid" TargetName="ThrowInfoGrid">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0, -35,0,0" />
                <SplineThicknessKeyFrame KeyTime="00:00:0.4" Value="0, 30,0,0" />
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:4" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                <SplineThicknessKeyFrame KeyTime="00:00:4" Value="0, 30,0,0" />
                <SplineThicknessKeyFrame KeyTime="00:00:4.2" Value="0, -35,0,0" />
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="ShowModalWindowAddNewNote">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DosentOpacityGrid">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ModalWindowAddNotes">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseModalWindowAddNewNote">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DosentOpacityGrid">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ModalWindowAddNotes">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        

        <Style x:Key="ButtonTriggerStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryAccentBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBlockColorWhite}"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Style.BasedOn>
                <Style TargetType="{x:Type ButtonBase}">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                    <Setter Property="materialDesign:RippleAssist.Feedback" Value="White"/>
                    <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource SecondaryAccentBrush}"/>
                    <Setter Property="materialDesign:ButtonProgressAssist.IndicatorBackground" Value="{DynamicResource MaterialDesignDivider}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth2"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Width" Value="40"/>
                    <Setter Property="Height" Value="40"/>
                    <Setter Property="materialDesign:ButtonProgressAssist.Opacity" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Grid>
                                    <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                        <Ellipse x:Name="border" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}">
                                            <Ellipse.Effect>
                                                <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <materialDesign:ShadowConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </Ellipse.Effect>
                                        </Ellipse>
                                    </AdornerDecorator>
                                    <ProgressBar x:Name="ProgressBar" Background="{Binding (materialDesign:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding (materialDesign:ButtonProgressAssist.IndicatorForeground), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch" IsIndeterminate="{Binding (materialDesign:ButtonProgressAssist.IsIndeterminate), RelativeSource={RelativeSource TemplatedParent}}" Maximum="{Binding (materialDesign:ButtonProgressAssist.Maximum), RelativeSource={RelativeSource TemplatedParent}}" Margin="-8" Minimum="{Binding (materialDesign:ButtonProgressAssist.Minimum), RelativeSource={RelativeSource TemplatedParent}}" Opacity="{Binding (materialDesign:ButtonProgressAssist.Opacity), RelativeSource={RelativeSource TemplatedParent}}" RenderTransformOrigin="0.5,0.5" Style="{DynamicResource MaterialDesignCircularProgressBar}" Value="{Binding (materialDesign:ButtonProgressAssist.Value), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Stretch">
                                        <ProgressBar.Height>
                                            <TemplateBinding Property="Height">
                                                <TemplateBinding.ConverterParameter>
                                                    <System:Int32>8</System:Int32>
                                                </TemplateBinding.ConverterParameter>
                                                <TemplateBinding.Converter>
                                                    <materialDesign:MathConverter Operation="Add"/>
                                                </TemplateBinding.Converter>
                                            </TemplateBinding>
                                        </ProgressBar.Height>
                                        <ProgressBar.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="0" ScaleX="0"/>
                                            </TransformGroup>
                                        </ProgressBar.RenderTransform>
                                        <ProgressBar.Visibility>
                                            <Binding Path="(materialDesign:ButtonProgressAssist.IsIndicatorVisible)" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </ProgressBar.Visibility>
                                        <ProgressBar.Width>
                                            <TemplateBinding Property="Width">
                                                <TemplateBinding.ConverterParameter>
                                                    <System:Int32>8</System:Int32>
                                                </TemplateBinding.ConverterParameter>
                                                <TemplateBinding.Converter>
                                                    <materialDesign:MathConverter Operation="Add"/>
                                                </TemplateBinding.Converter>
                                            </TemplateBinding>
                                        </ProgressBar.Width>
                                    </ProgressBar>
                                    <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                    <materialDesign:Ripple ClipToBounds="True" Clip="{Binding RenderedGeometry, ElementName=GeometryEllipse}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Ellipse x:Name="GeometryEllipse" Focusable="False" Fill="Transparent" IsHitTestVisible="False"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsDefaulted" Value="True">
                                        <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.23"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                        <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                                    </Trigger>
                                    <Trigger Property="materialDesign:ButtonProgressAssist.IsIndicatorVisible" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" From="0.9" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ProgressBar"/>
                                                    <DoubleAnimation Duration="0:0:0.2" From="0.9" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ProgressBar"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" From="1" To="0.9" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ProgressBar"/>
                                                    <DoubleAnimation Duration="0:0:0.2" From="1" To="0.9" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ProgressBar"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="UIElement.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard  Storyboard.TargetProperty="Foreground.Color" >
                                    <ColorAnimation To="Chartreuse" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard  Storyboard.TargetProperty="Foreground.Color" >
                                    <ColorAnimation To="White" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Style.Triggers>
                </Style>
            </Style.BasedOn>
        </Style>

    </Window.Resources>

    <Grid x:Name="MainGrid" Background="{DynamicResource MainBackgroundColor}">
        <Grid x:Name="DosentOpacityGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="1" Grid.RowSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid x:Name="GridMainPage" Grid.Column="1">
                    <Grid Background="{DynamicResource MainGrayColor}">
                        <Grid.Effect>
                            <DropShadowEffect ShadowDepth="0"
                                      Color="Black"
                                      BlurRadius="15"/>
                        </Grid.Effect>
                       
                        <Frame x:Name="MainWindowPage" NavigationUIVisibility="Hidden"/>
                    </Grid>
                </Grid>
                <Grid x:Name="GridMenu" Width="40" HorizontalAlignment="Left" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.Effect>
                        <DropShadowEffect ShadowDepth="0" Color="Black" BlurRadius="15"/>
                    </Grid.Effect>
                    <Grid x:Name="StackPanelButtonMenu"  Background="{DynamicResource TitleStackPanelBackgroundColor}" Height="50">
                        <Grid x:Name="UserPageInfo" Grid.Row="0" Margin="10" Width="20" Height="30" Opacity="0">
                            <Ellipse Width="50" Height="50" HorizontalAlignment="Center" VerticalAlignment="Top">
                                <Ellipse.Fill>
                                    <ImageBrush x:Name="ImageLogo" Stretch="UniformToFill"/>
                                </Ellipse.Fill>
                                <Ellipse.Effect>
                                    <DropShadowEffect ShadowDepth="0" Color="Black" BlurRadius="15"/>
                                </Ellipse.Effect>
                            </Ellipse>
                            <TextBlock x:Name="UserName" Text="AccountName" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource ResourceKey=TextBlockStyle}"/>
                            <Line X1="20" Y1="75" X2="210" Y2="75" Stroke="{DynamicResource ForegroundColorUIElements}"/>
                            <TextBlock x:Name="UserStatus" Text="UserStatus" VerticalAlignment="Bottom" Margin="20 35"   Style="{DynamicResource ResourceKey=TextBlockStyle}" ToolTip="Статус пользователя"/>
                            <materialDesign:PackIcon Kind="AccountOffOutline" Height="25" Width="25" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="20 0" ToolTip="Сменить пользователя" Foreground="{DynamicResource ForegroundColorUIElements}" Cursor="Hand" MouseLeftButtonUp="CloseAccount_MouseLeftButtonUp"/>
                        </Grid>
                        <Button x:Name="ButtonMenu" HorizontalAlignment="Left" VerticalAlignment="Top" Background="{x:Null}" BorderBrush="{x:Null}" Height="50" Width="40" Click="ButtonMenu_Click">
                            <Canvas HorizontalAlignment="Center" VerticalAlignment="Center" Height="18" Width="20" >
                                <Rectangle x:Name="rectangle" Width="20" Height="4" Margin="0,0,0,0" Fill="{DynamicResource ForegroundColorUIElements}" HorizontalAlignment="Center" VerticalAlignment="Top" RenderTransformOrigin="-0,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                                <Rectangle x:Name="rectangle1" Width="20" Height="4" Margin="0, 14,0,0" Fill="{DynamicResource ForegroundColorUIElements}" HorizontalAlignment="Center" VerticalAlignment="Top" RenderTransformOrigin="-0,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                                <Rectangle x:Name="rectangle2" Width="20" Height="4" Margin="0,7,0,0" Fill="{DynamicResource ForegroundColorUIElements}" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                            </Canvas>
                        </Button>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Gray" Offset="0"/>
                                <GradientStop Color="#585858" Offset="0.01"/>
                                <GradientStop Color="#1C1C1C" Offset="1"/>
                            </LinearGradientBrush>
                        </Grid.Background>
                        <ListBox x:Name="GroupListBox" Margin="0 30 0 0"  Grid.Row="1" SelectionChanged="GroupListBox_SelectionChanged">
                            <ListBoxItem x:Name="HomeBox" Style="{DynamicResource ListBoxItemStyle}">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon x:Name="HomeButton" Kind="HomeOutline" Height="25" Width="25" Foreground="{DynamicResource ForegroundColorUIElements}"/>
                                    <TextBlock Text="Главная" Margin="20 0" Style="{DynamicResource TextBlockStyle}"/>
                                </StackPanel>
                            </ListBoxItem>
                            <ListBoxItem x:Name="Box" Style="{DynamicResource ListBoxItemStyle}">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon x:Name="AccountButton" Kind="AccountOutline" Height="25" Width="25" Foreground="{DynamicResource ForegroundColorUIElements}"/>
                                    <TextBlock Text="Аккаунт" Margin="20 0" Style="{DynamicResource TextBlockStyle}"/>
                                </StackPanel>
                            </ListBoxItem>
                            <ListBoxItem x:Name="Settings" Style="{DynamicResource ListBoxItemStyle}">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon x:Name="SettingsButton" Kind="TrackChanges" Height="25" Width="25" Foreground="{DynamicResource ForegroundColorUIElements}"/>
                                    <TextBlock Text="Изменение к расписанию" Margin="20 0" Style="{DynamicResource TextBlockStyle}"/>
                                </StackPanel>
                            </ListBoxItem>
                        </ListBox>
                    </Grid>
                </Grid>

            </Grid>
            <Grid x:Name="GridTitleBar" Background="{DynamicResource TitleStackPanelBackgroundColor}" MouseDown="GridTitleBar_MouseDown" MouseLeftButtonUp="GridTitleBar_MouseLeftButtonDown">
                <Grid.Effect>
                    <DropShadowEffect ShadowDepth="0" Color="Black" BlurRadius="15"/>
                </Grid.Effect>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="6 2 2 2">
                    <Image Source="Resource/botRoma.png">
                        <Image.Effect>
                            <DropShadowEffect ShadowDepth="0" Color="Black" BlurRadius="15"/>
                        </Image.Effect>
                    </Image>
                </StackPanel>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBlock Text="Sheldue Helper" Foreground="{DynamicResource TextBlockColorWhite}" FontSize="17" FontFamily="Bahnschrift">
                        <TextBlock.Effect>
                            <DropShadowEffect ShadowDepth="0" Color="Black" BlurRadius="15"/>
                        </TextBlock.Effect>
                    </TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="10,0">
                    <Button x:Name="WindowMinimized" Width="25" Height="25" Background="{x:Null}" BorderBrush="{x:Null}" Click="WindowMinimized_Click" Style="{DynamicResource ButtonTriggerStyle}">
                        <materialDesign:PackIcon Kind="WindowMinimize"/>
                    </Button>
                    <Button  Style="{DynamicResource ButtonTriggerStyle}" Width="25" Height="25" Background="{x:Null}" BorderBrush="{x:Null}" Click="WindowMaxNormal_Click">
                        <materialDesign:PackIcon x:Name="WindowMaxNormal" Kind="WindowRestore"/>
                    </Button>
                    <Button x:Name="ButtonFechar" Style="{DynamicResource ButtonTriggerStyle}" Width="25" Height="25" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonFechar_Click">
                        <materialDesign:PackIcon Kind="Power" Background="Transparent"/>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
        <Grid x:Name="ThrowInfoGrid" Grid.RowSpan="3" Width="300" Height="Auto" VerticalAlignment="Top" Margin="-50" Style="{DynamicResource BlockGridStyle}" Opacity="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Rectangle Grid.ColumnSpan="2" Fill="{DynamicResource MainBackgroundColor}" Style="{DynamicResource BlockRectangleStyle}"></Rectangle>
            <materialDesign:PackIcon x:Name="KindThrowMessage" Kind="Check" VerticalAlignment="Center" HorizontalAlignment="Center" Height="40" Width="40" Foreground="{DynamicResource ForegroundColorUIElements}"/>
            <TextBlock x:Name="TextBlockMessageThrow" Grid.Column="1" Style="{DynamicResource TextBlockStyle}" Text="Throw Message Exception Or Seccessful Operation Check" FontSize="15" TextWrapping="Wrap" Margin="7" TextAlignment="Center"/>
        </Grid>
        <Grid x:Name="GridModalWindows" Visibility="Hidden">

            <Grid x:Name="ModalWindowAddNotes" Width="350" Height="Auto" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition/>
                    <RowDefinition Height="40"/>
                </Grid.RowDefinitions>
                <Rectangle Width="350" Height="300" Grid.RowSpan="6" Fill="{DynamicResource TitleStackPanelBackgroundColor}" Style="{DynamicResource BlockRectangleStyle}"/>
                <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center">
                    <TextBlock x:Name="NameGridChangeOrAddNotes" Style="{DynamicResource TextBlockStyle}" Text="Добавление заметки" FontSize="21"/>
                    <materialDesign:PackIcon x:Name="KindHeaderTextBock" Kind="NoteAddOutline" Foreground="{DynamicResource TextBlockColorChartreuse}" Margin="5" Height="21" Width="21" VerticalAlignment="Center"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="30 0">
                    <TextBlock Style="{DynamicResource TextBlockStyle}" HorizontalAlignment="Left" Text="Дата:"/>
                    <TextBlock x:Name="DateNoteTextBlock" Style="{DynamicResource TextBlockStyle}" HorizontalAlignment="Left" Text="22.04.2020г - Среда" Margin="15 0" TextDecorations="UnderLine" />
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="30 0">
                    <TextBlock Style="{DynamicResource TextBlockStyle}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0 5" Text="Пара:"/>
                    <TextBlock x:Name="ParaNoteTextBlock" Style="{DynamicResource TextBlockStyle}" HorizontalAlignment="Left" Text="Математическое моделирование"  MaxWidth="225" Margin="15 0" TextDecorations="UnderLine" TextWrapping="Wrap"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="3" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="30 0">
                    <TextBlock Style="{DynamicResource TextBlockStyle}" HorizontalAlignment="Left" Text="Текст заметки"/>
                    <materialDesign:PackIcon Kind="ArrowBottomBold" Foreground="{DynamicResource TextBlockColorChartreuse}" Margin="5" Height="21" Width="21" VerticalAlignment="Center"/>
                </StackPanel>
                <TextBlock x:Name="CounterLengthTextBox" Grid.Row="3" Text="0/100" HorizontalAlignment="Right" Style="{DynamicResource TextBlockStyle}" Opacity="0.5" FontSize="12" Margin="30 0" VerticalAlignment="Bottom"></TextBlock>
                <Border Grid.Row="4" Margin="30 5" CornerRadius="10" BorderBrush="{DynamicResource TextBlockColorChartreuse}" BorderThickness="2">
                    <TextBox x:Name="NewNoteTextBox" FontWeight="Light" MaxLength="100" Background="Transparent" BorderThickness="0" Padding="10" Style="{DynamicResource TextBoxTransparateStyle}" VerticalContentAlignment="Top" TextWrapping="Wrap" TextChanged="NewNoteTextBox_TextChanged"/>
                </Border>

                <Grid Grid.Row="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="SaveNoteButton" Style="{DynamicResource BorderButtonCorner}" Grid.Column="0" VerticalAlignment="Center" Content="Сохранить" HorizontalAlignment="Center" Width="120" ToolTip="Сохранить заметку" Visibility="Hidden" Click="SaveNoteButton_Click"/>
                    <Button Style="{DynamicResource BorderButtonCorner}" Grid.Column="1" VerticalAlignment="Center" Content="Отмена" HorizontalAlignment="Center" Width="120" Click="Button_Click"/>
                </Grid>

            </Grid>
        </Grid>
    </Grid>
</Window>
