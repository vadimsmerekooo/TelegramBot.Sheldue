<Window x:Class="WindowAppMain.Model.Window.WindowPasswordReset"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WindowAppMain.Model.Window"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        mc:Ignorable="d"
        WindowStyle="None" 
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        x:Name="WindowPassRes"
        Title="WindowPasswordReset" Height="200" Width="300" Background="{DynamicResource MainColorBackground}" Style="{DynamicResource WindowWithCornerBorder}">
    <Window.Resources>
        <Storyboard x:Key="OpenWindow">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="WindowPassRes">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0.25"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseWindow">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="WindowPassRes">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.25"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <SolidColorBrush x:Key="MainColorBackground" Color="#2E2E2E"/>
        <SolidColorBrush x:Key="WhiteColorBrush" Color="White"/>
        <SolidColorBrush x:Key="ChartsueColorBrush" Color="Chartreuse"/>
        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Bahnschrift"/>
            <Setter Property="Foreground" Value="{DynamicResource WhiteColorBrush}"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        <Style x:Key="TextBoxTransparateStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="FontFamily" Value="Bahnschrift"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="Control.IsFocused" Value="true">
                                <Setter TargetName="border" Property="BorderThickness" Value="0"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="PasswordBoxTransparateStyle" TargetType="{x:Type PasswordBox}">
            <Setter Property="FontFamily" Value="Bahnschrift"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>
        
        
        
        <!-- Storyboard Animatin slid Step's !-->
        <Storyboard x:Key="Step1">
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GridStep1" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GridStep2" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GridStep3" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridStep1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridStep2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridStep3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="KindStep1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="20"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="KindStep1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="20"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="KindStep2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="13"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="KindStep2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="13"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="KindStep3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="13"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="KindStep3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="13"/>
            </DoubleAnimationUsingKeyFrames>


        </Storyboard>
        <Storyboard x:Key="Step2">

            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GridStep1" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GridStep2" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GridStep3" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridStep1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridStep2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridStep3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>


            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="KindStep1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="13"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="KindStep1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="13"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="KindStep2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="20"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="KindStep2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="20"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="KindStep3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="13"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="KindStep3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="13"/>
            </DoubleAnimationUsingKeyFrames>

        </Storyboard>
        <Storyboard x:Key="Step3">

            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GridStep1" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GridStep2" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GridStep3" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridStep1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridStep2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridStep3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="KindStep1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="13"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="KindStep1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="13"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="KindStep2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="13"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="KindStep2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="13"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="KindStep3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="20"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="KindStep3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="20"/>
            </DoubleAnimationUsingKeyFrames>

        </Storyboard>



    </Window.Resources>
    <Grid x:Name="MainGridResetPassword">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="35"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="35"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition/>
            <RowDefinition Height="45"/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Column="1" Text="Изменение пароля" Foreground="{DynamicResource WhiteColorBrush}" Style="{DynamicResource TextBlockStyle}"/>
        <Button x:Name="ButtonFechar" Grid.Row="0" Grid.Column="2" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" VerticalAlignment="Center" HorizontalAlignment="Center"  Width="25" Height="25" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White" ToolTip="Выход" Click="CloseWindowResetPass">
            <materialDesign:PackIcon Kind="Power" Width="20" Height="20" Background="Transparent"/>
            <Button.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard  Storyboard.TargetProperty="Foreground.Color" >
                            <ColorAnimation To="Chartreuse" Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard  Storyboard.TargetProperty="Foreground.Color" >
                            <ColorAnimation To="White" Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
        </Button>

        <Grid x:Name="GridChange" Grid.Column="1" Grid.Row="1">
            <Grid x:Name="GridStep1" Opacity="1" Visibility="Visible">
                <TextBlock Text="Введите ваш логин"  Foreground="{DynamicResource WhiteColorBrush}" Style="{DynamicResource TextBlockStyle}" Margin="48,25,48,76"/>
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal">
                    <TextBox x:Name="TextBoxLogin" Width="180" FontWeight="Light" Background="Transparent" Foreground="White" BorderThickness="0" VerticalContentAlignment="Center" Style="{DynamicResource TextBoxTransparateStyle}" ToolTip="Логин" TextChanged="TextBoxLogin_TextChanged"></TextBox>
                    <materialDesign:PackIcon Kind="UserOutline" Foreground="Chartreuse" Width="25" Height="25"/>
                </StackPanel>
                <Border x:Name="BorderLoginTextBox" Width="210" 
                       VerticalAlignment="Bottom"
                       Margin="0 0 0 45"
                       Height="2"
                       Background="White"
                       Opacity="0.5"/>
            </Grid>
            <Grid x:Name="GridStep2" Visibility="Hidden">
                <TextBlock Text="Кем являлся обладатель Login" TextWrapping="Wrap" VerticalAlignment="Top" HorizontalAlignment="Center" Foreground="{DynamicResource WhiteColorBrush}" Style="{DynamicResource TextBlockStyle}" />
                <ComboBox x:Name="ComboBoxPerson" Foreground="White" FontSize="13" Margin="10 20" Width="210" HorizontalAlignment="Center" VerticalAlignment="Top" SelectionChanged="ComboBoxPerson_SelectionChanged"/>
                <TextBlock x:Name="TextBlockNameOrGroup" Opacity="0" Text="Ваше имя или группа" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource WhiteColorBrush}" Style="{DynamicResource TextBlockStyle}" />
                <ComboBox x:Name="ComboBoxNameOrGroup"  Visibility="Hidden" Foreground="White" FontSize="13" Margin="10 20" Width="210" HorizontalAlignment="Center" VerticalAlignment="Bottom" SelectionChanged="ComboBoxNameOrGroup_SelectionChanged"/>

            </Grid>
            <Grid x:Name="GridStep3" Visibility="Hidden" >
                <TextBlock Text="Введите новый пароль" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0 25" HorizontalAlignment="Center" Foreground="{DynamicResource WhiteColorBrush}" Style="{DynamicResource TextBlockStyle}" />
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal">
                    <PasswordBox x:Name="PasswordBoxNewPassword" Width="180" FontWeight="Light" Background="Transparent" Foreground="White" BorderThickness="0" VerticalContentAlignment="Center" Style="{DynamicResource PasswordBoxTransparateStyle}" ToolTip="Новый пароль" PasswordChanged="PasswordBoxNewPassword_PasswordChanged"></PasswordBox>
                    <materialDesign:PackIcon Kind="UserOutline" Foreground="Chartreuse" Width="25" Height="25"/>
                </StackPanel>
                <Border x:Name="BorderPasswordBox" Width="210" 
                       VerticalAlignment="Bottom"
                       Margin="0 0 0 45"
                       Height="2"
                       Background="White"
                       Opacity="0.5"/>
            </Grid>
        </Grid>
        <Grid x:Name="GridArrowSlider" Grid.Column="1" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="70"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="70"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="ButtonArrowLeft" Grid.Column="0" Visibility="Hidden" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" VerticalAlignment="Center" HorizontalAlignment="Center"  Width="25" Height="25" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White" ToolTip="Назад" Click="ClickLeftArrow">
                <materialDesign:PackIcon Kind="ArrowLeftBold" Width="25" Height="25" Background="Transparent"/>
                <Button.Triggers>
                    <EventTrigger RoutedEvent="UIElement.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard  Storyboard.TargetProperty="Foreground.Color" >
                                <ColorAnimation To="Chartreuse" Duration="0:0:0.1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="UIElement.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard  Storyboard.TargetProperty="Foreground.Color" >
                                <ColorAnimation To="White" Duration="0:0:0.1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
            </Button>
            <Button x:Name="ButtonArrowRight" Grid.Column="2" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" VerticalAlignment="Center" HorizontalAlignment="Center"  Width="25" Height="25" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White" ToolTip="Далее" IsEnabled="False" Click="ClickRightArrow">
                <materialDesign:PackIcon Kind="ArrowRightBold" Width="25" Height="25" Background="Transparent"/>
                <Button.Triggers>
                    <EventTrigger RoutedEvent="UIElement.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard  Storyboard.TargetProperty="Foreground.Color" >
                                <ColorAnimation To="Chartreuse" Duration="0:0:0.1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="UIElement.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard  Storyboard.TargetProperty="Foreground.Color" >
                                <ColorAnimation To="White" Duration="0:0:0.1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
            </Button>
            <Button x:Name="ButtonresetPassword" Visibility="Hidden" Grid.Column="2" Style="{StaticResource MaterialDesignFloatingActionAccentButton}" VerticalAlignment="Center" HorizontalAlignment="Center"  Width="30" Height="30" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White" ToolTip="Сменить пароль" Click="ButtonresetPassword_Click">
                <materialDesign:PackIcon Kind="Check" Width="30" Height="30" Background="Transparent"/>
                <Button.Triggers>
                    <EventTrigger RoutedEvent="UIElement.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard  Storyboard.TargetProperty="Foreground.Color" >
                                <ColorAnimation To="Chartreuse" Duration="0:0:0.1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="UIElement.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard  Storyboard.TargetProperty="Foreground.Color" >
                                <ColorAnimation To="White" Duration="0:0:0.1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
            </Button>
            <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                <materialDesign:PackIcon x:Name="KindStep1" Kind="AccountOutline" VerticalAlignment="Center" Margin="5 0" Foreground="{DynamicResource ChartsueColorBrush}" Width="20" Height="20" Cursor="Arrow"/>
                <materialDesign:PackIcon x:Name="KindStep2" Kind="CollegeOutline" VerticalAlignment="Center" Margin="5 0" Foreground="{DynamicResource WhiteColorBrush}" Width="13" Height="13" Cursor="Arrow"/>
                <materialDesign:PackIcon x:Name="KindStep3" Kind="PasswordReset" VerticalAlignment="Center" Margin="5 0" Foreground="{DynamicResource WhiteColorBrush}" Width="13" Height="13" Cursor="Arrow"/>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
